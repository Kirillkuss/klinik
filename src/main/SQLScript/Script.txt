// 1 Сущность Документ 

CREATE TABLE Document(
	id_document serial PRIMARY KEY,
	type_document VARCHAR ( 40 ) NOT NULL,
	seria VARCHAR ( 20 ) NOT NULL,
	numar VARCHAR ( 20 ) NOT NULL,
	snils VARCHAR ( 20 ),
	polis VARCHAR ( 20 )
)

// 2 Сущность Пациент

CREATE TABLE Patient(
	id_patient serial PRIMARY KEY,
	suraname VARCHAR ( 30 ) NOT NULL,
	name VARCHAR ( 30 ) NOT NULL,
	full_name VARCHAR ( 30 ) NOT NULL,
	gender bool NOT NULL,
	phone  VARCHAR ( 12 ) NOT NULL,
	address VARCHAR ( 50 ) NOT NULL,
	document_id int unique references public.Document ( id_document )	
)

// 3 Сущность Врач

CREATE TABLE Doctor(
	id_doctor serial PRIMARY KEY,
	fio VARCHAR ( 60 ) NOT NULL	
)

// 4 Сущность Жалоба

CREATE TABLE Complaint(
	id_complaint serial PRIMARY KEY,
	functional_impairment VARCHAR ( 50 ) NOT NULL
)

// 5 Сущность Реабилитационное лечение

CREATE TABLE Rehabilitation_solution(
	id_rehabilitation_solution serial PRIMARY KEY,
	name VARCHAR ( 30 ) NOT NULL,
	survey_plan VARCHAR ( 255 ) NOT NULL
)


// 6 Сущность ЛЕЧЕНИЕ 

CREATE TABLE Treatment (
	id_treatment serial PRIMARY KEY,
	medical_treatment VARCHAR ( 255 ) NOT NULL,
	method_of_treatment VARCHAR ( 20 ) NOT NULL,
	time_start_treatment timestamp(6) NOT NULL,
	end_time_treatment timestamp(6) NOT NULL,
	card_patient_id int8 NOT NULL,
	rehabilitation_solution_id int8 NOT NULL,
	FOREIGN KEY (rehabilitation_solution_id) REFERENCES public.Rehabilitation_solution(id_rehabilitation_solution),
    FOREIGN KEY (card_patient_id) REFERENCES public.Card_patient(id_card_patient)	
);

// 7 Сущность Карта Пациента

CREATE TABLE Card_patient(
	id_card_patient serial PRIMARY KEY,
	diagnosis VARCHAR ( 50 ) NOT NULL,
	allergy   bool NOT NULL,
	note VARCHAR ( 255 ) NOT NULL, 
	сonclusion VARCHAR ( 255 ) NOT NULL,
	complaint_id int8,
	pacient_id int unique references public.Patient ( id_patient ),
	FOREIGN KEY (complaint_id) REFERENCES public.Complaint(id_complaint) ON DELETE CASCADE ON UPDATE CASCADE	
);

// 8 Сущность запись

CREATE TABLE Record_patient(
	id_record serial PRIMARY KEY,
	date_record timestamp(6) NOT NULL,
	date_appointment timestamp(6) NOT NULL,
	number_room int4 NOT NULL,
	doctor_id int8 NOT NULL,
	card_patient_id  int8 NOT NULL,
	FOREIGN KEY (doctor_id) REFERENCES public.Doctor(id_doctor) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (card_patient_id) REFERENCES public.Card_patient(id_card_patient) ON DELETE CASCADE ON UPDATE CASCADE
);

// Добавление связи 

ALTER TABLE Treatment ADD FOREIGN KEY (card_patient_id) REFERENCES public.Card_patient(id_card_patient) ON DELETE CASCADE ON UPDATE CASCADE;

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Код для копирования:

CREATE TABLE Document(
	id_document serial PRIMARY KEY,
	type_document VARCHAR ( 40 ) NOT NULL,
	seria VARCHAR ( 20 ) NOT NULL,
	numar VARCHAR ( 20 ) NOT NULL,
	snils VARCHAR ( 20 ),
	polis VARCHAR ( 20 )
);

CREATE TABLE Patient(
	id_patient serial PRIMARY KEY,
	suraname VARCHAR ( 30 ) NOT NULL,
	name VARCHAR ( 30 ) NOT NULL,
	full_name VARCHAR ( 30 ) NOT NULL,
	gender bool NOT NULL,
	phone  VARCHAR ( 12 ) NOT NULL,
	address VARCHAR ( 50 ) NOT NULL,
	document_id int unique references public.Document ( id_document )	
);

CREATE TABLE Doctor(
	id_doctor serial PRIMARY KEY,
	fio VARCHAR ( 60 ) NOT NULL	
);

CREATE TABLE Complaint(
	id_complaint serial PRIMARY KEY,
	functional_impairment VARCHAR ( 50 ) NOT NULL
);

CREATE TABLE Rehabilitation_solution(
	id_rehabilitation_solution serial PRIMARY KEY,
	name VARCHAR ( 30 ) NOT NULL,
	survey_plan VARCHAR ( 255 ) NOT NULL
);


CREATE TABLE Card_patient(
	id_card_patient serial PRIMARY KEY,
	diagnosis VARCHAR ( 50 ) NOT NULL,
	allergy   bool NOT NULL,
	note VARCHAR ( 255 ) NOT NULL, 
	сonclusion VARCHAR ( 255 ) NOT NULL,
	complaint_id int8,
	pacient_id int unique references public.Patient ( id_patient ),
	FOREIGN KEY (complaint_id) REFERENCES public.Complaint(id_complaint) ON DELETE CASCADE ON UPDATE CASCADE	
);

CREATE TABLE Treatment (
	id_treatment serial PRIMARY KEY,
	medical_treatment VARCHAR ( 255 ) NOT NULL,
	method_of_treatment VARCHAR ( 20 ) NOT NULL,
	time_start_treatment timestamp(6) NOT NULL,
	end_time_treatment timestamp(6) NOT NULL,
	card_patient_id int8 NOT NULL,
	rehabilitation_solution_id int8 NOT NULL,
	FOREIGN KEY (rehabilitation_solution_id) REFERENCES public.Rehabilitation_solution(id_rehabilitation_solution),
    FOREIGN KEY (card_patient_id) REFERENCES public.Card_patient(id_card_patient)	
);

CREATE TABLE Record_patient(
	id_record serial PRIMARY KEY,
	date_record timestamp(6) NOT NULL,
	date_appointment timestamp(6) NOT NULL,
	number_room int4 NOT NULL,
	doctor_id int8 NOT NULL,
	card_patient_id  int8 NOT NULL,
	FOREIGN KEY (doctor_id) REFERENCES public.Doctor(id_doctor) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (card_patient_id) REFERENCES public.Card_patient(id_card_patient) ON DELETE CASCADE ON UPDATE CASCADE
);
