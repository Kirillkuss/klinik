plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}
group = 'com.klinik'
version = '0.0.1'
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) 
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.springframework.kafka:spring-kafka'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'javax.validation:validation-api'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70' 
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    testImplementation 'org.jmockit:jmockit:1.49'
    testImplementation group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.12'
    testImplementation 'io.qameta.allure:allure-junit5:2.20.1'
    implementation 'org.testcontainers:postgresql:1.17.2'
    implementation 'org.testcontainers:junit-jupiter:1.17.2'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.13.8'
    testImplementation 'org.instancio:instancio-junit:4.1.0'
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    implementation 'org.seleniumhq.selenium:selenium-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.destination = file("$buildDir/reports/jacoco/test/html")
        csv.destination = file("$buildDir/reports/jacoco/test/csv")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/Test*.class']) //исключение тестовых классов из отчета
        }))
    }
}

test {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport) 
}

